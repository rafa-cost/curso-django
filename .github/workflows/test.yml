# This is a basic workflow to help you get started with Actions

name: curso-django

# Controls when the workflow will run
on:

permissions:
  contents: read

  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "7" ]
  pull_request:
    branches: [ "7" ]




  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      PIPENV_NO_INHERIT: 1
      PIPENV_IGNORE_VIRTUALENVS: 1
      SECRET_KEY: ${{ secrets.SECRET_KEY}}

    SERVICES:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432-5432']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Copying configurations
        run: |
         cp contrib/env=sample .env
        

      # Runs a single command using the runners shell
      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv sync --dev

      # Runs a set of commands using the runners shell
      - name: Lint  with flake8
        run: |
          pipenv run flake8 .
        

      #pytest
      - name: Test with pytest
        run: |
          pipenv run pytest pypro --cov=pypro
          

      - name: Posting Coverage
        env:
          pipenv run codecov

      #codecov
      - name: Decouple
        run: | 
          cp contrib/env-sample .env
